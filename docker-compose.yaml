services:
  library_service_project_api:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db && 
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - redis

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - my_db:$PGDATA

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service_project worker -l info"
    depends_on:
      - library_service_project_api
      - redis
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./:/app
      - my_db:/app/data

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A library_service_project beat -l INFO"
    depends_on:
      - library_service_project_api
      - redis
    restart: on-failure
    env_file:
      - .env
    volumes:
      - ./:/app
      - my_db:/app/data

volumes:
  my_db:
